name: 发布软件

on:
  workflow_dispatch: # 手动触发


permissions: write-all # 给所有工作写权限

jobs:
  job_v:
    name: 构建版本号和变更信息
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.create_version.outputs.tag_name }} # 版本号
      body: ${{ steps.create_version.outputs.body }} # 版本变更内容
    steps:
      - uses: release-drafter/release-drafter@v5
        id: create_version
        with:
          config-name: release-drafter.yml # 配置文件在 .github/release-drafter.yml
          disable-autolabeler: true # 禁止自动标签
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
      - name: 查看变量
        run: |
          echo ${{ format('version={0}', steps.create_version.outputs.tag_name ) }} 

  job_windows:
    needs: job_v # 等待 jobs_v 任务完成才执行
    name: 构建windows软件
    runs-on: windows-latest
    env:
      version: ${{ needs.job_v.outputs.version }}
      body: ${{ needs.job_v.outputs.body }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: 读入环境信息
        run: |
          echo ${{ format('version {0}', env.version ) }} # 版本号
#      - name: Flutter 环境
#        uses: subosito/flutter-action@v2
#        with:
#          flutter-version: '3.13.9'
#
#      - name: 构建
#        run: |
#          flutter config --enable-windows-desktop
#          flutter pub get
#          dart run build_runner build --delete-conflicting-outputs --enable-experiment=records,patterns

      - name: 替换文本
        run: |
          "BUILD_VERSION=${{ inputs.version }}" >> $env:GITHUB_ENV
          choco install sed make -y
          sed -i "s/%{{SCHEDULE_VERSION}}%/${{ env.BUILD_VERSION }}/" windows/choco-struct/schedule.nuspec

      - name: 打包exe
        run: |
          dart pub global activate flutter_distributor
          make innoinstall
          flutter_distributor package --platform=windows --targets=exe --skip-clean
          mv dist/**/schedule-*-windows-setup.exe dist/schedule-windows-x86_64-setup.exe

      - name: 打包nupkg
        run: |
          Set-Variable -Name HASH -Value (Get-FileHash dist\schedule-windows-x86_64-setup.exe).Hash
          make choco
          mv dist/schedule.*.nupkg dist/schedule-windows-x86_64.nupkg

      - name: 重命名
        run: |
          mv dist/schedule-windows-x86_64.nupkg dist/schedule-windows-${{env.version}}-x86_64.nupkg
          mv dist/schedule-windows-x86_64-setup.exe dist/schedule-windows-${{env.version}}-x86_64-setup.exe

      - name: 上传产物
        uses: actions/upload-artifact@v3
        with:
          name: windows
          path: |
            dist/schedule-windows-${{env.version}}-x86_64.nupkg
            dist/schedule-windows-${{env.version}}-x86_64-setup.exe
      

  job_release:
    needs: [ job_v, job_windows ]
    name: 发布版本
    runs-on: ubuntu-latest
    env:
      version: ${{ needs.job_v.outputs.version }}
      body: ${{ needs.job_v.outputs.body }}
    steps:
      - name: 下载产物
        id: download
        uses: actions/download-artifact@v3
        with:
          path: ./
      - name: 读入环境信息
        run: |
          echo ${{ format('version {0}', env.version ) }}
          echo ${{steps.download.outputs.download-path}}
          ls -R

      - name: 发布文件
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.TOKEN_GITHUB }}
          allowUpdates: true # 覆盖文件
          #draft: true # 草稿 自己可见 版本号会保持一样 默认是自动发布 latest
          #prerelease: true # 预发布 别人可以看到 版本号会继续加
          tag: ${{ env.version }} # 版本号 v0.1.0
          body: ${{ env.body }} # 输出的内容
          artifacts: "android/*,ipa/*,windows/*,macos/*"
